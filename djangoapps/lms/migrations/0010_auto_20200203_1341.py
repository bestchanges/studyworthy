# Generated by Django 3.0.2 on 2020-02-03 10:41

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('lms', '0009_auto_20200123_0829'),
    ]

    operations = [
        migrations.CreateModel(
            name='Form',
            fields=[
                ('content_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lms.Content')),
                ('description', models.TextField(blank=True, null=True)),
                ('decision_deadline_days', models.IntegerField(blank=True, null=True)),
                ('pass_score', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('lms.content',),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(default=uuid.uuid4, help_text='code for HTML input field', max_length=100)),
                ('name', models.CharField(help_text='Text of question visible to human', max_length=200)),
                ('type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Textarea'), ('radio', 'Radio'), ('checkboxes', 'Checkboxes')], default='text', max_length=20)),
                ('choices', models.CharField(blank=True, help_text="Pipe-separated ('choice1|choice2') choices", max_length=500, null=True)),
                ('correct_choices', models.CharField(blank=True, help_text='Correct choices (if multiple then pipe-separated)', max_length=500, null=True)),
                ('auto_check', models.BooleanField(default=True, help_text='Check answer automatically (if possible)')),
                ('score', models.IntegerField(blank=True, default=1, help_text='Score value for correct answer', null=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.Form')),
            ],
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(default=uuid.uuid4, help_text='code to easily identify this Seminar across all others', unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='SeminarContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.Content')),
                ('seminar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.Seminar')),
            ],
            options={
                'ordering': ['seminar', 'order'],
            },
        ),
        migrations.AlterModelOptions(
            name='unitcontent',
            options={'ordering': ['unit', 'order']},
        ),
        migrations.DeleteModel(
            name='Task',
        ),
        migrations.AddField(
            model_name='seminar',
            name='contents',
            field=models.ManyToManyField(through='lms.SeminarContent', to='lms.Content'),
        ),
    ]

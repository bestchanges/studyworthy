# Generated by Django 2.2.16 on 2020-09-30 20:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Course name', max_length=250)),
                ('code', models.CharField(default=uuid.uuid4, max_length=250, unique=True)),
                ('state', models.CharField(choices=[('draft', 'draft'), ('active', 'active'), ('archived', 'archived')], default='draft', max_length=8)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('state', models.CharField(choices=[('draft', 'draft'), ('planned', 'planned'), ('ongoing', 'ongoing'), ('finished', 'finished'), ('cancelled', 'cancelled')], default='planned', max_length=20)),
                ('schedule_template', models.CharField(default='Mon 15:00, Tue 15:00, Sat 19:00', help_text='Regular plan of learning', max_length=200, null=True)),
                ('start_planned_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('finish_planned_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='flows', to='lms.Course')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
            ],
            options={
                'verbose_name': 'Flow',
                'verbose_name_plural': 'Flows',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'ADMIN'), ('TEACHER', 'TEACHER'), ('STUDENT', 'STUDENT')], max_length=20)),
                ('notes', models.CharField(blank=True, default='', help_text='Visible for stuff only', max_length=200, verbose_name='Notes')),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='lms.Flow')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
                'unique_together': {('flow', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('participant_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lms.Participant')),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
            },
            bases=('lms.participant',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('participant_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lms.Participant')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
            bases=('lms.participant',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('participant_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lms.Participant')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
            bases=('lms.participant',),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True, default=0, null=True)),
                ('name', models.CharField(blank=True, default='', max_length=250)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='lms.Course')),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
                'ordering': ['course', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, help_text='Lesson ordering number among the course', verbose_name='Number')),
                ('title', models.CharField(default='Lesson name', max_length=250, verbose_name='Title')),
                ('code', models.CharField(default=uuid.uuid4, max_length=250, unique=True, verbose_name='Code')),
                ('is_stop_lesson', models.BooleanField(default=False, verbose_name='Stop lesson')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='lms.Course', verbose_name='Course')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='lms.Unit', verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'ordering': ['course', 'number'],
            },
        ),
        migrations.CreateModel(
            name='FlowLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, help_text='Lesson ordering number among the course')),
                ('is_opened', models.BooleanField(default=False)),
                ('open_planned_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flow_lessons', to='lms.Flow')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flow_lessons', to='lms.Lesson')),
            ],
            options={
                'ordering': ['flow', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when_completed', models.DateTimeField(blank=True, help_text='When the student has marked lesson as completed', null=True)),
                ('when_checked', models.DateTimeField(blank=True, help_text='When the teacher has checked the task', null=True)),
                ('check_result', models.CharField(blank=True, choices=[('accepted', 'Accepted'), ('failed', 'Failed'), ('rejected', 'Rejected')], default=None, max_length=30, null=True, verbose_name='Check result')),
                ('score', models.IntegerField(blank=True, default=None, help_text='Score for student response', null=True, verbose_name='Score')),
                ('flow_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='lms.FlowLesson')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='lms.Participant')),
            ],
            options={
                'ordering': ['participant', 'flow_lesson'],
                'unique_together': {('participant', 'flow_lesson')},
            },
        ),
    ]

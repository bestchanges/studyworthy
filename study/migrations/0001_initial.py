# Generated by Django 3.0.1 on 2019-12-28 15:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('code', models.SlugField(unique=True)),
                ('state', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived')], default='draft', max_length=8)),
                ('short_description', models.CharField(default='', max_length=500)),
                ('long_description', models.TextField(default='')),
                ('content_repository', models.CharField(help_text='GIT repository with course content', max_length=255)),
                ('students_template_repository', models.CharField(help_text='Template GIT repository for students submissions', max_length=255)),
                ('authors', models.ManyToManyField(to='study.Author')),
            ],
        ),
        migrations.CreateModel(
            name='CourseFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(blank=True)),
                ('content_repository_branch_name', models.CharField(help_text="Branch in course's content_repository", max_length=255)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In progress'), ('finished', 'Finished'), ('cancelled', 'Cancelled')], max_length=11)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('start_planned_at', models.DateField(blank=True, null=True)),
                ('finish_planned_at', models.DateField(blank=True, null=True)),
                ('started_at', models.DateField(blank=True, null=True)),
                ('finished_at', models.DateField(blank=True, null=True)),
                ('cancelled_at', models.DateField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='study.Course')),
            ],
            options={
                'unique_together': {('course', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('upload', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='FlowSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('code', models.SlugField(max_length=20)),
                ('order', models.IntegerField()),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.CourseFlow')),
            ],
            options={
                'unique_together': {('flow', 'order'), ('flow', 'code')},
            },
        ),
        migrations.CreateModel(
            name='FlowUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('code', models.SlugField(max_length=20)),
                ('order', models.IntegerField()),
                ('task_type', models.CharField(choices=[('none', 'None'), ('self_check', 'Self check'), ('assignment', 'Assignment')], default='none', max_length=20)),
                ('submission_timespan_days', models.IntegerField(default=0)),
                ('pass_score', models.IntegerField(default=0)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.FlowSection')),
            ],
            options={
                'unique_together': {('section', 'code'), ('section', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher'), ('expert', 'Expert'), ('admin', 'Admin')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('code_repository', models.CharField(max_length=255, null=True)),
                ('student_score', models.IntegerField()),
                ('assigned_at', models.DateField(auto_now_add=True)),
                ('deactivated_at', models.DateField(blank=True, null=True)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.CourseFlow')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('language', models.CharField(choices=[('ru', 'Russian'), ('en', 'English'), ('ua', 'Ukrainian')], default='ru', max_length=2)),
                ('skype', models.CharField(blank=True, default='', max_length=100)),
                ('google_account', models.CharField(blank=True, default='', max_length=100)),
                ('github_account', models.CharField(blank=True, default='', max_length=100)),
                ('phone', models.CharField(blank=True, default='', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('none', 'None'), ('done', 'Done'), ('wait_review', 'To review'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='none', max_length=20)),
                ('can_student_resubmit', models.BooleanField(default=True)),
                ('students_comment', models.TextField(default='')),
                ('reviewer_comment', models.TextField(default='')),
                ('score', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('assigned_at', models.DateField(blank=True, null=True)),
                ('checked_at', models.DateField(blank=True, null=True)),
                ('resubmitted_at', models.DateField(blank=True, null=True)),
                ('reviewer', models.ForeignKey(limit_choices_to={'role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='study.Participant')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='study.Participant')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.FlowUnit')),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.UserProfile'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='study.Category')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='user_profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='study.UserProfile'),
        ),
        migrations.CreateModel(
            name='ApplicationForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='study.CourseFlow')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='study.UserProfile')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together={('flow', 'user_profile', 'role')},
        ),
    ]
